openapi: 3.0.3
info:
  title: Eleven Minutes API
  termsOfService: http://swagger.io/terms/
  contact:
    email: david.dimitrov@tuta.io
  version: 0.1.0
externalDocs:
  description: GitHub Repository
  url: https://github.com/daviddimitrov/eleven-minutes
servers:
  - url: ????
tags:
  - name: task
    description: Operations about tasks
  - name: user
    description: Operations about users
paths:
  /task:
    post:
      tags:
        - task
      summary: Add a new task
      operationId: addTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /task/{userId}/today:
    get:
      tags:
        - task
      summary: Provides a user's tasks that are due today or earlier
      description: Provides all tasks of a user that are due today or earlier, but do not exceed the user's default duration in minutes. Tasks are sorted by priority, due date and rhythm.
      operationId: findTasksForToday
      parameters:
        - name: userId
          in: path
          description: ID of the user whose tasks are filtered
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
  /task/{userId}:
    get:
      tags:
        - task
      summary: Provides a user's tasks 
      description: Provides all tasks of a user
      operationId: findTasks
      parameters:
        - name: userId
          in: path
          description: ID of the user whose tasks are filtered
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
  /task/{taskId}:
    put:
        tags:
          - task
        summary: Update an existing task
        operationId: updateTask
        parameters:
        - name: taskId
          in: path
          description: ID of the task that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          required: true
        responses:
          '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Task'          
          '400':
            description: Invalid ID supplied
          '404':
            description: Task not found
          '422':
            description: Validation exception
    delete:
      tags:
        - task
      summary: Delete task by ID
      operationId: deleteTask
      parameters:
        - name: taskId
          in: path
          description: ID of the task that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse' 
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
  /user:
    post:
      tags:
        - user
      summary: Add a new user
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /user/{userId}:
    put:
        tags:
          - user
        summary: Update an existing user
        operationId: updateUser
        parameters:
        - name: userId
          in: path
          description: ID of the user that needs to be updated
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          required: true
        responses:
          '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'          
          '400':
            description: Invalid ID supplied
          '404':
            description: User not found
          '422':
            description: Validation exception
    get:
      tags:
        - user
      summary: Provides user by ID
      operationId: getUser
      parameters:
        - name: userId
          in: path
          description: ID of desired user
          required: true
          schema:
            type: string
      responses:
        '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'  
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
  /user/{userId}/command_history:
    get:
      tags:
        - user
      summary: Provides a user's command history
      operationId: getUserCommandHistory
      parameters:
        - name: userId
          in: path
          description: ID of desired user
          required: true
          schema:
            type: string
      responses:
        '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CommandHistory'  
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
  
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: 867000000
        name:
          type: string
          example: David
        defaultDuration:
          type: integer
          format: int32
          example: 11
    PriorityLevel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: ASAP
    CommandHistory:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        user_id:
          $ref: '#/components/schemas/User'
        command:
          type: string
          example: new_task
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        userId:
          $ref: '#/components/schemas/User'
        priorityLevel:
          $ref: '#/components/schemas/PriorityLevel'
        name:
          type: string
          example: Wohnzimmer saugen
        duration:
          type: integer
          format: int64
          example: 4
        dueDate:
          type: string
          format: date
          example: 2017-07-21
        rhythm:
          type: integer
          format: int64
          example: 8
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string